#!/bin/bash
# chkconfig: - 25 75
# description: carbon-relay
# processname: carbon-relay

export PYTHONPATH="$GRAPHITE_DIR/lib:$PYTHONPATH"

# Source function library.
if [ -e /etc/rc.d/init.d/functions ]; then
    . /etc/rc.d/init.d/functions
fi

DAEMON="relay"
GRAPHITE_DIR="/opt/graphite"
LOG_DIR="/var/log/graphite"
CONF="${GRAPHITE_DIR}/conf/carbon.conf"
INSTANCES=$(grep "^\[${DAEMON}" ${CONF} | cut -d \[ -f 2 | cut -d \] -f 1 | cut -d : -f 2)

start(){
    if [ -n ${CARBON_INSTANCE} ]; then
        if [ -f $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid ] && [ $(cat $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid | wc -w) -lt 1 ]; then
            echo "Removing empty pid file: $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid"
            rm -f $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid
        fi
        $GRAPHITE_DIR/bin/carbon-${DAEMON}.py --instance=${CARBON_INSTANCE} --pidfile=$LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid --logdir=$LOG_DIR/${DAEMON}-${CARBON_INSTANCE} --config=${CONF} start

        if [ $? -eq 0 ]; then
            echo_success
        else
            echo_failure
        fi
        echo ""
   fi
}

stop(){
    if [ -n ${CARBON_INSTANCE} ]; then
        echo "Stopping ${DAEMON} instance ${CARBON_INSTANCE}"
        pid=$(/usr/bin/pgrep -f "carbon-${DAEMON}.py --instance=${CARBON_INSTANCE}")
        if [ ! -f $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid ]; then
            echo "Fixing pid file $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid"
            echo $pid > $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid
            chown hms:nonpriv $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid
            chmod 755 $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid
        fi
        $GRAPHITE_DIR/bin/carbon-${DAEMON}.py --instance=${CARBON_INSTANCE} --pidfile=$LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid --logdir=$LOG_DIR/${DAEMON}-${CARBON_INSTANCE} --config=${CONF} stop
        sleep 5
        if [[ ! -z $pid ]]; then
            ports=$(/bin/netstat -lnp | grep "${pid}" | grep ":2.*" | /usr/bin/wc -l)
            if [ $ports -gt 0 ]; then
                echo "Instance ${CARBON_INSTANCE} did not release ports yet. Sleeping longer, then force killing it..."
                sleep 5
                /usr/bin/pkill -9 -f "carbon-${DAEMON}.py --instance=${CARBON_INSTANCE}"
                sleep 2
            fi
        fi
        rm -f $LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid
        if [ $? -eq 0 ]; then
            echo_success
        else
            echo_failure
        fi
        echo ""
    fi
}

status(){
    if [ -n ${CARBON_INSTANCE} ]; then
        $GRAPHITE_DIR/bin/carbon-${DAEMON}.py --instance=${CARBON_INSTANCE} --pidfile=$LOG_DIR/${DAEMON}-${CARBON_INSTANCE}/carbon-${DAEMON}.pid --logdir=$LOG_DIR/${DAEMON}-${CARBON_INSTANCE} status

        if [ $? -eq 0 ]; then
            echo_success
        else
            echo_failure
        fi
        echo ""
    fi
}

prog_usage(){
    echo $"Usage: $0 {start|stop|restart|status} ({instance})"
    exit 1
}

if [ -n $2 ]; then
    ONLY_INSTANCE=$2
fi

case "$1" in
  start)
    if [ ! -z $ONLY_INSTANCE ]; then
        CARBON_INSTANCE=$ONLY_INSTANCE
        start
    else
        for INSTANCE in ${INSTANCES}; do
            if [ "${INSTANCE}" == "${DAEMON}" ]; then
                $INSTANCE="a"
            fi
            CARBON_INSTANCE=$INSTANCE
            start
        done
    fi
    ;;
  stop)
    if [ ! -z $ONLY_INSTANCE ]; then
        CARBON_INSTANCE=$ONLY_INSTANCE
        stop
    else
        for INSTANCE in ${INSTANCES}; do
            if [ "${INSTANCE}" == "${DAEMON}" ]; then
                $INSTANCE="a"
            fi
            CARBON_INSTANCE=$INSTANCE
            stop
        done
    fi
    ;;
  status)
    if [ ! -z $ONLY_INSTANCE ]; then
        CARBON_INSTANCE=$ONLY_INSTANCE
        status
    else
        for INSTANCE in ${INSTANCES}; do
            if [ "${INSTANCE}" == "${DAEMON}" ]; then
                $INSTANCE="a"
            fi
            CARBON_INSTANCE=$INSTANCE
            status
        done
    fi
    ;;
  restart|reload)
    if [ ! -z $ONLY_INSTANCE ]; then
        CARBON_INSTANCE=$ONLY_INSTANCE
        stop
        start
    else
        for INSTANCE in ${INSTANCES}; do
            if [ "${INSTANCE}" == "${DAEMON}" ]; then
                $INSTANCE="a"
            fi
            CARBON_INSTANCE=$INSTANCE
            stop
            start
        done
    fi
    ;;
  *)
    prog_usage
esac
